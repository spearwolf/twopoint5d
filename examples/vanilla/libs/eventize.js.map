{"version":3,"file":"eventize.js.map","sources":["../src/Priority.ts","../src/constants.ts","../src/utils.ts","../src/EventKeeper.ts","../src/EventListener.ts","../src/EventStore.ts","../node_modules/tslib/tslib.es6.js","../src/isEventized.ts","../src/subscribeTo.ts","../src/injectEventizeApi.ts","../src/eventize.ts"],"sourcesContent":["import {EventizePriority} from './types';\n\nexport const Priority: EventizePriority = {\n  Max: Number.POSITIVE_INFINITY,\n  AAA: 1000000000,\n  BB: 1000000,\n  C: 1000,\n  Default: 0,\n  Low: -10000,\n  Min: Number.NEGATIVE_INFINITY,\n};\n","export const EVENT_CATCH_EM_ALL = '*';\n\nexport const LISTENER_UNKNOWN = 0;\nexport const LISTENER_IS_FUNC = 1;\nexport const LISTENER_IS_NAMED_FUNC = 2;\nexport const LISTENER_IS_OBJ = 4;\n\nexport const NAMESPACE: symbol = (() => {\n  // @ts-ignore\n  if (!Symbol.eventize) {\n    // @ts-ignore\n    Symbol.eventize = Symbol('eventize');\n  }\n  // @ts-ignore\n  return Symbol.eventize;\n})();\n\nexport const LOG_NAMESPACE = '[eventize]';\n","/* eslint-disable no-console */\nimport {LOG_NAMESPACE, EVENT_CATCH_EM_ALL} from './constants';\nimport {EventName} from './types';\n\nexport const isCatchEmAll = (eventName: unknown): eventName is string =>\n  eventName === EVENT_CATCH_EM_ALL;\n\nexport const isEventName = (eventName: unknown): eventName is EventName => {\n  switch (typeof eventName) {\n    case 'string':\n    case 'symbol':\n      return true;\n    default:\n      return false;\n  }\n};\n\nexport const hasConsole = typeof console !== 'undefined';\n\nexport const warn = hasConsole\n  ? console[console.warn ? 'warn' : 'log'].bind(console, LOG_NAMESPACE)\n  : () => {};\n\ntype PropertyKey = string | symbol;\ntype PropertyValue = any;\n\nexport const definePublicPropertyRO = <T extends Object>(\n  obj: T,\n  name: PropertyKey,\n  value: PropertyValue,\n): T => {\n  Object.defineProperty(obj, name, {\n    value,\n    configurable: true,\n    enumerable: true,\n  });\n  return obj;\n};\n\nexport const definePublicPropertiesRO = <T extends Object>(\n  obj: T,\n  attrs: Record<PropertyKey, PropertyValue>,\n): T => {\n  const keys = Object.keys(attrs);\n  const len = keys.length;\n  for (let i = 0; i < len; i += 1) {\n    definePublicPropertyRO(obj, keys[i], attrs[keys[i]]);\n  }\n  return obj;\n};\n\nexport const defineHiddenPropertyRO = <T extends Object>(\n  obj: T,\n  name: PropertyKey,\n  value: PropertyValue,\n): T => {\n  Object.defineProperty(obj, name, {\n    value,\n    configurable: true,\n  });\n  return obj;\n};\n","import {AnyEventNames, EventArgs, EventName} from './types';\nimport {isCatchEmAll} from './utils';\n\nexport class EventKeeper {\n  events = new Map<EventName, EventArgs>();\n  eventNames = new Set<EventName>();\n\n  add(eventNames: AnyEventNames): void {\n    if (Array.isArray(eventNames)) {\n      eventNames.forEach((name) => this.eventNames.add(name));\n    } else {\n      this.eventNames.add(eventNames);\n    }\n  }\n\n  remove(eventNames: AnyEventNames): void {\n    if (Array.isArray(eventNames)) {\n      eventNames.forEach((name) => this.eventNames.delete(name));\n    } else {\n      this.eventNames.delete(eventNames);\n    }\n  }\n\n  retain(eventName: EventName, args: EventArgs): void {\n    if (this.eventNames.has(eventName)) {\n      this.events.set(eventName, args);\n    }\n  }\n\n  isKnown(eventName: EventName): boolean {\n    return this.eventNames.has(eventName);\n  }\n\n  emit(\n    eventName: EventName,\n    eventListener: {apply: (eventName: EventName, args?: EventArgs) => void},\n  ): void {\n    if (!isCatchEmAll(eventName)) {\n      const args = this.events.get(eventName);\n      if (args) {\n        eventListener.apply(eventName, args);\n      }\n    } else {\n      this.eventNames.forEach((name) => this.emit(name, eventListener));\n    }\n  }\n}\n","import {\n  EVENT_CATCH_EM_ALL,\n  LISTENER_IS_FUNC,\n  LISTENER_IS_NAMED_FUNC,\n  LISTENER_IS_OBJ,\n} from './constants';\n\nimport {EventName, EventArgs, ListenerObjectType} from './types';\nimport {isCatchEmAll} from './utils';\n\ntype EmitFnType = Function | undefined;\ntype CallAfterApplyFnType = (() => void) | undefined;\n\nconst apply = (context: unknown, func: EmitFnType, args: EventArgs) => {\n  if (typeof func === 'function') {\n    func.apply(context, args);\n  }\n};\n\nconst emit = (\n  eventName: EventName,\n  listener: {emit: EmitFnType},\n  args: EventArgs,\n) => apply(listener, listener.emit, [eventName].concat(args));\n\nconst detectListenerType = (listener: unknown) => {\n  switch (typeof listener) {\n    case 'function':\n      return LISTENER_IS_FUNC;\n    case 'string':\n    case 'symbol':\n      return LISTENER_IS_NAMED_FUNC;\n    case 'object':\n      return LISTENER_IS_OBJ;\n  }\n};\n\nlet lastId = 0;\nconst createUniqId = () => ++lastId;\n\nexport class EventListener {\n  readonly id: number;\n  readonly eventName: EventName;\n  readonly isCatchEmAll: boolean;\n  readonly priority: number | undefined;\n  readonly listener: unknown;\n  readonly listenerObject: ListenerObjectType;\n  readonly listenerType: number;\n  callAfterApply: CallAfterApplyFnType;\n  isRemoved: boolean;\n  refCount: number;\n\n  constructor(\n    eventName: EventName,\n    priority: number | undefined,\n    listener: unknown,\n    listenerObject: ListenerObjectType = null,\n  ) {\n    this.id = createUniqId();\n    this.eventName = eventName;\n    this.isCatchEmAll = isCatchEmAll(eventName);\n    this.listener = listener;\n    this.listenerObject = listenerObject;\n    this.priority = priority;\n    this.listenerType = detectListenerType(listener);\n    this.callAfterApply = undefined;\n    this.isRemoved = false;\n    this.refCount = 1;\n  }\n\n  /** In the test for equality, the priority is not considered */\n  isEqual(\n    listener: unknown,\n    listenerObject: ListenerObjectType = null,\n  ): boolean {\n    if (listener === this) return true;\n    const typeofListener = typeof listener;\n    if (typeofListener === 'number' && listener === this.id) return true;\n    if (\n      listenerObject === null &&\n      (typeofListener === 'string' || typeofListener === 'symbol')\n    ) {\n      if (listener === EVENT_CATCH_EM_ALL) return true;\n      if (listener === this.eventName) return true;\n      return false;\n    }\n    return this.listener === listener && this.listenerObject === listenerObject;\n  }\n\n  apply(eventName: EventName, args?: EventArgs): void {\n    if (this.isRemoved) return;\n\n    const {listener, listenerObject} = this;\n\n    switch (this.listenerType) {\n      case LISTENER_IS_FUNC:\n        // @ts-ignore\n        apply(listenerObject, listener, args);\n        if (this.callAfterApply) this.callAfterApply();\n        break;\n\n      case LISTENER_IS_NAMED_FUNC:\n        // @ts-ignore\n        apply(listenerObject, listenerObject[listener], args);\n        if (this.callAfterApply) this.callAfterApply();\n        break;\n\n      case LISTENER_IS_OBJ: {\n        // @ts-ignore\n        const func = listener[eventName];\n        if (this.isCatchEmAll || this.eventName === eventName) {\n          if (typeof func === 'function') {\n            func.apply(listener, args);\n          } else {\n            // @ts-ignore\n            emit(eventName, listener, args);\n          }\n          if (this.callAfterApply) this.callAfterApply();\n        }\n        break;\n      }\n    }\n  }\n}\n","import {EventListener} from './EventListener';\nimport {\n  EVENT_CATCH_EM_ALL,\n  LISTENER_IS_NAMED_FUNC,\n  LISTENER_IS_OBJ,\n} from './constants';\nimport {EventName, ListenerObjectType} from './types';\nimport {isCatchEmAll, isEventName} from './utils';\n\ntype HasPriorityOrIdType = {priority: number; id: number};\n\nconst sortByPriorityAndId = (\n  a: HasPriorityOrIdType,\n  b: HasPriorityOrIdType,\n): number =>\n  a.priority !== b.priority ? b.priority - a.priority : a.id - b.id;\n\nconst cloneArray = <T>(arr: Array<T>): Array<T> => arr?.slice(0);\n\nconst removeItemFromArray = (arr: Array<any>, item: any) => {\n  const idx = arr.indexOf(item);\n  if (idx > -1) {\n    arr.splice(idx, 1);\n  }\n};\n\nconst isSimilarListenerType = (listenerType: number) =>\n  listenerType === LISTENER_IS_OBJ || listenerType === LISTENER_IS_NAMED_FUNC;\n\n// TODO removeSimilarListener()\n\nconst removeListenerFromArray = (\n  listeners: Array<EventListener>,\n  listener: unknown,\n  listenerObject: ListenerObjectType,\n) => {\n  const idx = listeners.findIndex((item) =>\n    item.isEqual(listener, listenerObject),\n  );\n  if (idx > -1) {\n    listeners[idx].isRemoved = true;\n    listeners.splice(idx, 1);\n  }\n};\n\nconst removeSimilarListenersFromArray = (\n  fromArray: Array<EventListener>,\n  eventName: unknown,\n  listenerObject: ListenerObjectType,\n) => {\n  const similarListeners: EventListener[] = [];\n  for (const listener of fromArray) {\n    if (\n      (eventName == null && listener.listenerObject === listenerObject) ||\n      (listener.eventName === eventName && listener.listener === listenerObject)\n    ) {\n      similarListeners.push(listener);\n    }\n  }\n  for (const listener of similarListeners) {\n    removeListenerFromArray(fromArray, listener, undefined);\n  }\n};\n\nconst removeAll = (fromArray: Array<EventListener>) => {\n  if (fromArray) {\n    fromArray.forEach((listener) => {\n      listener.isRemoved = true;\n      // listener.refCount = 0;\n    });\n    fromArray.length = 0;\n  }\n};\n\nconst isSimilar = (\n  a: {\n    listenerType: number;\n    priority: number;\n    eventName: string | symbol;\n    listenerObject: any;\n    listener: any;\n  },\n  b: EventListener,\n) => {\n  if (a.listenerType === b.listenerType) {\n    return (\n      a.priority === b.priority &&\n      a.eventName === b.eventName &&\n      a.listenerObject === b.listenerObject &&\n      a.listener === b.listener\n    );\n  }\n  return false;\n};\n\nconst findSimilarListener = (\n  searchFor: EventListener,\n  listeners: EventListener[],\n) => {\n  if (isSimilarListenerType(searchFor.listenerType)) {\n    return listeners.find((listener) => isSimilar(searchFor, listener));\n  }\n  return undefined;\n};\n\nconst insertOrFindSimilarListener = (\n  listener: EventListener,\n  arr: EventListener[],\n): EventListener => {\n  const similarListener = findSimilarListener(listener, arr);\n  if (similarListener) {\n    similarListener.refCount += 1;\n    return similarListener;\n  }\n  arr.push(listener);\n  arr.sort(sortByPriorityAndId);\n  return listener;\n};\n\nexport class EventStore {\n  readonly namedListeners: Map<EventName, Array<EventListener>>;\n  readonly catchEmAllListeners: Array<EventListener>;\n\n  #getListenersForEventName = (eventName: string | symbol): EventListener[] => {\n    let namedListeners = this.namedListeners.get(eventName);\n    if (!namedListeners) {\n      namedListeners = [];\n      this.namedListeners.set(eventName, namedListeners);\n    }\n    return namedListeners;\n  };\n\n  constructor() {\n    this.namedListeners = new Map();\n    this.catchEmAllListeners = [];\n  }\n\n  /**\n   * Returns the given listener (newListener), or if there is already a similar listener in the store,\n   * the existing one with increased reference count (refCount)\n   */\n  add(listener: EventListener): EventListener {\n    return insertOrFindSimilarListener(\n      listener,\n      listener.isCatchEmAll\n        ? this.catchEmAllListeners\n        : this.#getListenersForEventName(listener.eventName),\n    );\n  }\n\n  remove(\n    listener: unknown,\n    listenerObject: ListenerObjectType,\n    removeSimilar = false,\n  ): void {\n    // TODO clean up this messy function!\n    if (listenerObject == null && Array.isArray(listener)) {\n      // ---------------------------------------------------------------\n      // off([...])\n      //\n      listener.forEach((li) => this.remove(li, null, removeSimilar));\n      // ---------------------------------------------------------------\n    } else if (\n      listener == null ||\n      (listenerObject == null && isCatchEmAll(listener))\n    ) {\n      // ---------------------------------------------------------------\n      // off()\n      // off('*')\n      //\n      this.removeAllListeners();\n      // ---------------------------------------------------------------\n    } else if (listenerObject == null && isEventName(listener)) {\n      // ---------------------------------------------------------------\n      // off('foo')\n      // off(Symbol('foo'))\n      //\n      removeAll(this.namedListeners.get(listener));\n      // ---------------------------------------------------------------\n    } else if (listener instanceof EventListener) {\n      // ---------------------------------------------------------------\n      // off(EventListener)\n      // on(...)()\n      //\n      if (!listener.isRemoved) {\n        listener.refCount -= 1;\n        if (listener.refCount < 1) {\n          listener.isRemoved = true;\n          this.namedListeners.forEach((namedListeners) =>\n            removeItemFromArray(namedListeners, listener),\n          );\n          removeItemFromArray(this.catchEmAllListeners, listener);\n        }\n      }\n      // ---------------------------------------------------------------\n    } else if (removeSimilar) {\n      if (isCatchEmAll(listener)) {\n        // ---------------------------------------------------------------\n        // .off('*', obj)\n        //\n        // TODO propably this will never be called\n        //      so please check if we can remove this code path\n        removeSimilarListenersFromArray(\n          this.catchEmAllListeners,\n          EVENT_CATCH_EM_ALL,\n          listener,\n        );\n        // ---------------------------------------------------------------\n      } else {\n        // ---------------------------------------------------------------\n        // off('foo', obj)\n        // off(Symbol('foo'), obj)\n        //\n        this.namedListeners.forEach((namedListeners) =>\n          removeSimilarListenersFromArray(\n            namedListeners,\n            listener,\n            listenerObject,\n          ),\n        );\n        // ---------------------------------------------------------------\n      }\n    } else {\n      // ---------------------------------------------------------------\n      // off(obj)\n      //\n      this.namedListeners.forEach((namedListeners) => {\n        removeListenerFromArray(namedListeners, listener, listenerObject);\n        removeSimilarListenersFromArray(namedListeners, undefined, listener);\n      });\n      removeListenerFromArray(\n        this.catchEmAllListeners,\n        listener,\n        listenerObject,\n      );\n      removeSimilarListenersFromArray(\n        this.catchEmAllListeners,\n        undefined,\n        listener,\n      );\n      // ---------------------------------------------------------------\n    }\n  }\n\n  removeAllListeners(): void {\n    this.namedListeners.forEach((namedListeners) => removeAll(namedListeners));\n    this.namedListeners.clear();\n    removeAll(this.catchEmAllListeners);\n  }\n\n  forEach(eventName: EventName, fn: (listener: EventListener) => void): void {\n    const catchEmAllListeners = cloneArray(this.catchEmAllListeners);\n    const namedListeners = cloneArray(this.namedListeners.get(eventName));\n    if (\n      eventName === EVENT_CATCH_EM_ALL ||\n      !namedListeners ||\n      namedListeners.length === 0\n    ) {\n      catchEmAllListeners.forEach(fn);\n    } else if (catchEmAllListeners.length === 0) {\n      namedListeners.forEach(fn);\n    } else {\n      const iLen = namedListeners.length;\n      const jLen = catchEmAllListeners.length;\n      let i = 0;\n      let j = 0;\n      while (i < iLen || j < jLen) {\n        if (i < iLen) {\n          const cur = namedListeners[i];\n          if (j >= jLen || cur.priority >= catchEmAllListeners[j].priority) {\n            fn(cur);\n            ++i;\n            continue;\n          }\n        }\n        if (j < jLen) {\n          fn(catchEmAllListeners[j]);\n          ++j;\n        }\n      }\n    }\n  }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import {NAMESPACE} from './constants';\nimport {EventizeApi, EventizeGuard} from './types';\n\nexport const isEventized: EventizeGuard = <T extends Object>(\n  obj: T,\n): obj is T & EventizeApi =>\n  Boolean(\n    obj &&\n      // @ts-ignore\n      obj[NAMESPACE],\n  );\n","import {EventKeeper} from './EventKeeper';\nimport {EventListener} from './EventListener';\nimport {EventStore} from './EventStore';\nimport {Priority} from './Priority';\nimport {EVENT_CATCH_EM_ALL} from './constants';\nimport {EventArgs, EventName, ListenerObjectType} from './types';\nimport {hasConsole, warn} from './utils';\n\nconst registerEventListener = (\n  store: EventStore,\n  keeper: EventKeeper,\n  eventName: EventName,\n  priority: number,\n  listener: unknown,\n  listenerObject: ListenerObjectType,\n): EventListener => {\n  const eventListener = store.add(\n    new EventListener(eventName, priority, listener, listenerObject),\n  );\n  keeper.emit(eventName, eventListener); // TODO what if similarListener ?\n  return eventListener;\n};\n\nexport const subscribeTo = (\n  store: EventStore,\n  keeper: EventKeeper,\n  args: EventArgs,\n): EventListener | Array<EventListener> => {\n  const len = args.length;\n  const typeOfFirstArg = typeof args[0];\n\n  let eventName: EventName;\n  let priority: number;\n  let listener: unknown;\n  let listenerObject: ListenerObjectType;\n\n  if (len >= 2 && len <= 3 && typeOfFirstArg === 'number') {\n    eventName = EVENT_CATCH_EM_ALL;\n    [priority, listener, listenerObject] = args;\n  } else if (len >= 3 && len <= 4 && typeof args[1] === 'number') {\n    [eventName, priority, listener, listenerObject] = args;\n  } else {\n    priority = Priority.Default;\n    if (\n      typeOfFirstArg === 'string' ||\n      typeOfFirstArg === 'symbol' ||\n      Array.isArray(args[0])\n    ) {\n      [eventName, listener, listenerObject] = args;\n    } else {\n      eventName = EVENT_CATCH_EM_ALL;\n      [listener, listenerObject] = args;\n    }\n  }\n\n  if (!listener && hasConsole) {\n    warn('called with insufficient arguments!', args);\n    throw 'subscribeTo called with insufficient arguments!';\n  }\n\n  const register = (prio: number) => (event: EventName) =>\n    registerEventListener(store, keeper, event, prio, listener, listenerObject);\n\n  if (Array.isArray(eventName)) {\n    return eventName.map((name) => {\n      if (Array.isArray(name)) {\n        return register(name[1])(name[0]);\n      }\n      return register(priority)(name);\n    });\n  }\n  return register(priority)(eventName);\n};\n","import {EventKeeper} from './EventKeeper';\nimport {EventListener} from './EventListener';\nimport {EventStore} from './EventStore';\nimport {EVENT_CATCH_EM_ALL, NAMESPACE} from './constants';\nimport {isEventized} from './isEventized';\nimport {subscribeTo} from './subscribeTo';\nimport {\n  AnyEventNames,\n  EventArgs,\n  EventizeApi,\n  EventName,\n  ListenerType,\n  ListenerObjectType,\n  SubscribeArgs,\n  UnsubscribeFunc,\n} from './types';\nimport {defineHiddenPropertyRO, isEventName} from './utils';\n\nconst unsubscribeAfterApply =\n  (obj: EventizeApi) => (listener: EventListener) => {\n    listener.callAfterApply = () => obj.off(listener);\n  };\n\nconst makeUnsubscribe = (\n  host: EventizeApi,\n  listeners: EventListener | Array<EventListener>,\n): UnsubscribeFunc => {\n  const unsubscribe = () => host.off(listeners);\n  return Object.assign(\n    unsubscribe,\n    Array.isArray(listeners) ? {listeners} : {listener: listeners},\n  ) as UnsubscribeFunc;\n};\n\nexport function injectEventizeApi<T extends Object>(obj: T): T & EventizeApi {\n  if (isEventized(obj)) {\n    // it already has the interface - no need to inject it again\n    return obj;\n  }\n\n  const store = new EventStore();\n  const keeper = new EventKeeper();\n\n  defineHiddenPropertyRO(obj, NAMESPACE, {keeper, store});\n\n  const eventizedObj = Object.assign(obj, {\n    on(...args: SubscribeArgs): UnsubscribeFunc {\n      return makeUnsubscribe(eventizedObj, subscribeTo(store, keeper, args));\n    },\n\n    once(...args: SubscribeArgs): UnsubscribeFunc {\n      const listeners = subscribeTo(store, keeper, args);\n      if (Array.isArray(listeners)) {\n        listeners.forEach(unsubscribeAfterApply(eventizedObj));\n      } else {\n        unsubscribeAfterApply(eventizedObj)(listeners);\n      }\n      return makeUnsubscribe(eventizedObj, listeners);\n    },\n\n    off(listener?: ListenerType, listenerObject?: ListenerObjectType): void {\n      const listenerType = typeof listener;\n      const forceRemove =\n        listenerObject != null &&\n        (listenerType === 'string' || listenerType === 'symbol');\n      store.remove(listener, listenerObject, forceRemove);\n      if (Array.isArray(listener)) {\n        keeper.remove(listener.filter((li) => typeof li === 'string'));\n      } else if (isEventName(listener)) {\n        keeper.remove(listener);\n      }\n    },\n\n    emit(eventNames: AnyEventNames, ...args: EventArgs): void {\n      if (Array.isArray(eventNames)) {\n        eventNames.forEach((event: EventName) => {\n          store.forEach(event, (listener) => listener.apply(event, args));\n          keeper.retain(event, args);\n        });\n      } else if (eventNames !== EVENT_CATCH_EM_ALL) {\n        store.forEach(eventNames, (listener) => {\n          listener.apply(eventNames, args);\n        });\n        keeper.retain(eventNames, args);\n      }\n    },\n\n    retain(eventName: EventName): void {\n      keeper.add(eventName);\n    },\n  });\n\n  return eventizedObj;\n}\n","import {Priority} from './Priority';\nimport {EVENT_CATCH_EM_ALL} from './constants';\nimport {injectEventizeApi} from './injectEventizeApi';\nimport {isEventized} from './isEventized';\nimport {EventizeApi, EventizeFuncApi} from './types';\n\nexport const eventize: EventizeFuncApi = (() => {\n  const api = <T extends Object>(obj: T): T & EventizeApi =>\n    injectEventizeApi(obj);\n\n  api.inject = injectEventizeApi;\n\n  api.extend = <T extends Object>(obj: T): T & EventizeApi =>\n    injectEventizeApi(Object.create(obj));\n\n  api.create = (obj: Object): EventizeApi => {\n    const eventizer = injectEventizeApi({});\n    eventizer.on(EVENT_CATCH_EM_ALL, Priority.Default, obj);\n    return eventizer;\n  };\n\n  api.is = isEventized;\n  api.Priority = Priority;\n\n  return api;\n})();\n\nexport interface Eventize extends EventizeApi {}\n\nexport class Eventize {\n  constructor() {\n    eventize(this);\n  }\n}\n"],"names":["Priority","Max","Number","POSITIVE_INFINITY","AAA","BB","C","Default","Low","Min","NEGATIVE_INFINITY","NAMESPACE","Symbol","eventize","isCatchEmAll","eventName","isEventName","hasConsole","console","warn","bind","EventKeeper","constructor","this","events","Map","eventNames","Set","add","Array","isArray","forEach","name","remove","delete","retain","args","has","set","isKnown","emit","eventListener","get","apply","context","func","lastId","EventListener","priority","listener","listenerObject","id","listenerType","detectListenerType","callAfterApply","undefined","isRemoved","refCount","isEqual","typeofListener","concat","sortByPriorityAndId","a","b","cloneArray","arr","slice","removeItemFromArray","item","idx","indexOf","splice","removeListenerFromArray","listeners","findIndex","removeSimilarListenersFromArray","fromArray","similarListeners","push","removeAll","length","EventStore","_EventStore_getListenersForEventName","namedListeners","catchEmAllListeners","similarListener","searchFor","find","isSimilar","findSimilarListener","sort","insertOrFindSimilarListener","receiver","state","kind","f","TypeError","call","value","__classPrivateFieldGet","removeSimilar","li","removeAllListeners","clear","fn","iLen","jLen","i","j","cur","isEventized","obj","Boolean","subscribeTo","store","keeper","len","typeOfFirstArg","register","prio","event","registerEventListener","map","unsubscribeAfterApply","off","makeUnsubscribe","host","Object","assign","injectEventizeApi","defineProperty","configurable","defineHiddenPropertyRO","eventizedObj","on","once","forceRemove","filter","api","inject","extend","create","eventizer","is","Eventize"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEa,MAAAA,EAA6B,CACxCC,IAAKC,OAAOC,kBACZC,IAAK,IACLC,GAAI,IACJC,EAAG,IACHC,QAAS,EACTC,KAAM,IACNC,IAAKP,OAAOQ,mBCFDC,GAENC,OAAOC,WAEVD,OAAOC,SAAWD,OAAO,aAGpBA,OAAOC,UCVHC,EAAgBC,GDJK,MCKhCA,EAEWC,EAAeD,IAC1B,cAAeA,GACb,IAAK,SACL,IAAK,SACH,OAAO,EACT,QACE,OAAO,EACV,EAGUE,EAAgC,oBAAZC,QAEpBC,EAAOF,EAChBC,QAAQA,QAAQC,KAAO,OAAS,OAAOC,KAAKF,QDHnB,cCIzB,aClBSG,EAAbC,cACEC,KAAAC,OAAS,IAAIC,IACbF,KAAAG,WAAa,IAAIC,GAyClB,CAvCCC,IAAIF,GACEG,MAAMC,QAAQJ,GAChBA,EAAWK,SAASC,GAAST,KAAKG,WAAWE,IAAII,KAEjDT,KAAKG,WAAWE,IAAIF,EAEvB,CAEDO,OAAOP,GACDG,MAAMC,QAAQJ,GAChBA,EAAWK,SAASC,GAAST,KAAKG,WAAWQ,OAAOF,KAEpDT,KAAKG,WAAWQ,OAAOR,EAE1B,CAEDS,OAAOpB,EAAsBqB,GACvBb,KAAKG,WAAWW,IAAItB,IACtBQ,KAAKC,OAAOc,IAAIvB,EAAWqB,EAE9B,CAEDG,QAAQxB,GACN,OAAOQ,KAAKG,WAAWW,IAAItB,EAC5B,CAEDyB,KACEzB,EACA0B,GAEA,GAAK3B,EAAaC,GAMhBQ,KAAKG,WAAWK,SAASC,GAAST,KAAKiB,KAAKR,EAAMS,SANtB,CAC5B,MAAML,EAAOb,KAAKC,OAAOkB,IAAI3B,GACzBqB,GACFK,EAAcE,MAAM5B,EAAWqB,EAElC,CAGF,EChCH,MAAMO,EAAQ,CAACC,EAAkBC,EAAkBT,KAC7B,mBAATS,GACTA,EAAKF,MAAMC,EAASR,EACrB,EAqBH,IAAIU,EAAS,QAGAC,EAYXzB,YACEP,EACAiC,EACAC,EACAC,EAAqC,MAErC3B,KAAK4B,KApBoBL,EAqBzBvB,KAAKR,UAAYA,EACjBQ,KAAKT,aAAeA,EAAaC,GACjCQ,KAAK0B,SAAWA,EAChB1B,KAAK2B,eAAiBA,EACtB3B,KAAKyB,SAAWA,EAChBzB,KAAK6B,aAvCkB,CAACH,IAC1B,cAAeA,GACb,IAAK,WACH,OHzB0B,EG0B5B,IAAK,SACL,IAAK,SACH,OH3BgC,EG4BlC,IAAK,SACH,OH5ByB,EG6B5B,EA8BqBI,CAAmBJ,GACvC1B,KAAK+B,oBAAiBC,EACtBhC,KAAKiC,WAAY,EACjBjC,KAAKkC,SAAW,CACjB,CAGDC,QACET,EACAC,EAAqC,MAErC,GAAID,IAAa1B,KAAM,OAAO,EAC9B,MAAMoC,SAAwBV,EAC9B,MAAuB,WAAnBU,GAA+BV,IAAa1B,KAAK4B,KAEhC,OAAnBD,GACoB,WAAnBS,GAAkD,WAAnBA,EAM3BpC,KAAK0B,WAAaA,GAAY1B,KAAK2B,iBAAmBA,EHtF/B,MGkFxBD,GACAA,IAAa1B,KAAKR,UAIzB,CAED4B,MAAM5B,EAAsBqB,GAC1B,GAAIb,KAAKiC,UAAW,OAEpB,MAAMP,SAACA,EAAQC,eAAEA,GAAkB3B,KAEnC,OAAQA,KAAK6B,cACX,KH5F0B,EG8FxBT,EAAMO,EAAgBD,EAAUb,GAC5Bb,KAAK+B,gBAAgB/B,KAAK+B,iBAC9B,MAEF,KHjGgC,EGmG9BX,EAAMO,EAAgBA,EAAeD,GAAWb,GAC5Cb,KAAK+B,gBAAgB/B,KAAK+B,iBAC9B,MAEF,KHtGyB,EGsGH,CAEpB,MAAMT,EAAOI,EAASlC,IAClBQ,KAAKT,cAAgBS,KAAKR,YAAcA,KACtB,mBAAT8B,EACTA,EAAKF,MAAMM,EAAUb,GA7FpB,EACXrB,EACAkC,EACAb,KACGO,EAAMM,EAAUA,EAAST,KAAM,CAACzB,GAAW6C,OAAOxB,GAAM,EA4FjDI,CAAKzB,EAAWkC,EAAUb,GAExBb,KAAK+B,gBAAgB/B,KAAK+B,kBAEhC,KACD,EAEJ,QC/GH,MAAMO,EAAsB,CAC1BC,EACAC,IAEAD,EAAEd,WAAae,EAAEf,SAAWe,EAAEf,SAAWc,EAAEd,SAAWc,EAAEX,GAAKY,EAAEZ,GAE3Da,EAAiBC,GAA4BA,eAAAA,EAAKC,MAAM,GAExDC,EAAsB,CAACF,EAAiBG,KAC5C,MAAMC,EAAMJ,EAAIK,QAAQF,GACpBC,GAAO,GACTJ,EAAIM,OAAOF,EAAK,EACjB,EAQGG,EAA0B,CAC9BC,EACAxB,EACAC,KAEA,MAAMmB,EAAMI,EAAUC,WAAWN,GAC/BA,EAAKV,QAAQT,EAAUC,KAErBmB,GAAO,IACTI,EAAUJ,GAAKb,WAAY,EAC3BiB,EAAUF,OAAOF,EAAK,GACvB,EAGGM,EAAkC,CACtCC,EACA7D,EACAmC,KAEA,MAAM2B,EAAoC,GAC1C,IAAK,MAAM5B,KAAY2B,GAEL,MAAb7D,GAAqBkC,EAASC,iBAAmBA,GACjDD,EAASlC,YAAcA,GAAakC,EAASA,WAAaC,IAE3D2B,EAAiBC,KAAK7B,GAG1B,IAAK,MAAMA,KAAY4B,EACrBL,EAAwBI,EAAW3B,OAAUM,EAC9C,EAGGwB,EAAaH,IACbA,IACFA,EAAU7C,SAASkB,IACjBA,EAASO,WAAY,CAAI,IAG3BoB,EAAUI,OAAS,EACpB,QAgDUC,EAaX3D,cATA4D,EAA4B5C,IAAAf,MAACR,IAC3B,IAAIoE,EAAiB5D,KAAK4D,eAAezC,IAAI3B,GAK7C,OAJKoE,IACHA,EAAiB,GACjB5D,KAAK4D,eAAe7C,IAAIvB,EAAWoE,IAE9BA,CAAc,IAIrB5D,KAAK4D,eAAiB,IAAI1D,IAC1BF,KAAK6D,oBAAsB,EAC5B,CAMDxD,IAAIqB,GACF,MArCgC,EAClCA,EACAgB,KAEA,MAAMoB,EAdoB,EAC1BC,EACAb,KAEA,GJ9F6B,KIqBArB,EAyEHkC,EAAUlC,eJ/FA,IIuBAA,EAyElC,OAAOqB,EAAUc,MAAMtC,IAAauC,OAlBtCzB,EAkB2Dd,GAzB3Da,EAyBgDwB,GAhB1ClC,eAAiBW,EAAEX,cAErBU,EAAEd,WAAae,EAAEf,UACjBc,EAAE/C,YAAcgD,EAAEhD,WAClB+C,EAAEZ,iBAAmBa,EAAEb,gBACvBY,EAAEb,WAAac,EAAEd,SAfL,IAChBa,EAOAC,CAkBoE,IA1ExC,IAACX,CA4Eb,EAOQqC,CAAoBxC,EAAUgB,GACtD,OAAIoB,GACFA,EAAgB5B,UAAY,EACrB4B,IAETpB,EAAIa,KAAK7B,GACTgB,EAAIyB,KAAK7B,GACFZ,EAAQ,EA0BN0C,CACL1C,EACAA,EAASnC,aACLS,KAAK6D,oBCsFR,SAAgCQ,EAAUC,EAAOC,EAAMC,GAC1D,GAAa,MAATD,IAAiBC,EAAG,MAAM,IAAIC,UAAU,iDAC5C,GAAqB,mBAAVH,EAAuBD,IAAaC,IAAUE,GAAKF,EAAMxD,IAAIuD,GAAW,MAAM,IAAII,UAAU,4EACvG,MAAgB,MAATF,EAAeC,EAAa,MAATD,EAAeC,EAAEE,KAAKL,GAAYG,EAAIA,EAAEG,MAAQL,EAAMnD,IAAIkD,EACxF,CDzFUO,CAAA5E,KAAI2D,EAAA,KAAJe,KAAA1E,KAA+B0B,EAASlC,WAE/C,CAEDkB,OACEgB,EACAC,EACAkD,GAAgB,GAGM,MAAlBlD,GAA0BrB,MAAMC,QAAQmB,GAI1CA,EAASlB,SAASsE,GAAO9E,KAAKU,OAAOoE,EAAI,KAAMD,KAGnC,MAAZnD,GACmB,MAAlBC,GAA0BpC,EAAamC,GAMxC1B,KAAK+E,qBAEsB,MAAlBpD,GAA0BlC,EAAYiC,GAK/C8B,EAAUxD,KAAK4D,eAAezC,IAAIO,IAEzBA,aAAoBF,EAKxBE,EAASO,YACZP,EAASQ,UAAY,EACjBR,EAASQ,SAAW,IACtBR,EAASO,WAAY,EACrBjC,KAAK4D,eAAepD,SAASoD,GAC3BhB,EAAoBgB,EAAgBlC,KAEtCkB,EAAoB5C,KAAK6D,oBAAqBnC,KAIzCmD,EACLtF,EAAamC,GAMf0B,EACEpD,KAAK6D,oBJ3MmB,II6MxBnC,GAQF1B,KAAK4D,eAAepD,SAASoD,GAC3BR,EACEQ,EACAlC,EACAC,MASN3B,KAAK4D,eAAepD,SAASoD,IAC3BX,EAAwBW,EAAgBlC,EAAUC,GAClDyB,EAAgCQ,OAAgB5B,EAAWN,EAAS,IAEtEuB,EACEjD,KAAK6D,oBACLnC,EACAC,GAEFyB,EACEpD,KAAK6D,yBACL7B,EACAN,GAIL,CAEDqD,qBACE/E,KAAK4D,eAAepD,SAASoD,GAAmBJ,EAAUI,KAC1D5D,KAAK4D,eAAeoB,QACpBxB,EAAUxD,KAAK6D,oBAChB,CAEDrD,QAAQhB,EAAsByF,GAC5B,MAAMpB,EAAsBpB,EAAWzC,KAAK6D,qBACtCD,EAAiBnB,EAAWzC,KAAK4D,eAAezC,IAAI3B,IAC1D,GJ7P8B,MI8P5BA,GACCoE,GACyB,IAA1BA,EAAeH,OAGV,GAAmC,IAA/BI,EAAoBJ,OAC7BG,EAAepD,QAAQyE,OAClB,CACL,MAAMC,EAAOtB,EAAeH,OACtB0B,EAAOtB,EAAoBJ,OACjC,IAAI2B,EAAI,EACJC,EAAI,EACR,KAAOD,EAAIF,GAAQG,EAAIF,GAAM,CAC3B,GAAIC,EAAIF,EAAM,CACZ,MAAMI,EAAM1B,EAAewB,GAC3B,GAAIC,GAAKF,GAAQG,EAAI7D,UAAYoC,EAAoBwB,GAAG5D,SAAU,CAChEwD,EAAGK,KACDF,EACF,QACD,CACF,CACGC,EAAIF,IACNF,EAAGpB,EAAoBwB,MACrBA,EAEL,CACF,MAtBCxB,EAAoBrD,QAAQyE,EAuB/B,gBEtRU,MAAAM,EACXC,GAEAC,QACED,GAEEA,EAAIpG,ICcGsG,EAAc,CACzBC,EACAC,EACA/E,KAEA,MAAMgF,EAAMhF,EAAK4C,OACXqC,SAAwBjF,EAAK,GAEnC,IAAIrB,EACAiC,EACAC,EACAC,EAqBJ,GAnBIkE,GAAO,GAAKA,GAAO,GAAwB,WAAnBC,GAC1BtG,EPrC8B,KOsC7BiC,EAAUC,EAAUC,GAAkBd,GAC9BgF,GAAO,GAAKA,GAAO,GAAwB,iBAAZhF,EAAK,IAC5CrB,EAAWiC,EAAUC,EAAUC,GAAkBd,GAElDY,EAAWhD,EAASO,QAEC,WAAnB8G,GACmB,WAAnBA,GACAxF,MAAMC,QAAQM,EAAK,KAElBrB,EAAWkC,EAAUC,GAAkBd,GAExCrB,EPlD4B,KOmD3BkC,EAAUC,GAAkBd,KAI5Ba,GAAYhC,EAEf,MADAE,EAAK,sCAAuCiB,GACtC,kDAGR,MAAMkF,EAAYC,GAAkBC,GApDR,EAC5BN,EACAC,EACApG,EACAiC,EACAC,EACAC,KAEA,MAAMT,EAAgByE,EAAMtF,IAC1B,IAAImB,EAAchC,EAAWiC,EAAUC,EAAUC,IAGnD,OADAiE,EAAO3E,KAAKzB,EAAW0B,GAChBA,CAAa,EAyClBgF,CAAsBP,EAAOC,EAAQK,EAAOD,EAAMtE,EAAUC,GAE9D,OAAIrB,MAAMC,QAAQf,GACTA,EAAU2G,KAAK1F,GAChBH,MAAMC,QAAQE,GACTsF,EAAStF,EAAK,GAAdsF,CAAkBtF,EAAK,IAEzBsF,EAAStE,EAATsE,CAAmBtF,KAGvBsF,EAAStE,EAATsE,CAAmBvG,EAAU,ECrDhC4G,EACHZ,GAAsB9D,IACrBA,EAASK,eAAiB,IAAMyD,EAAIa,IAAI3E,EAAS,EAG/C4E,EAAkB,CACtBC,EACArD,IAGOsD,OAAOC,QADM,IAAMF,EAAKF,IAAInD,IAGjC5C,MAAMC,QAAQ2C,GAAa,CAACA,aAAa,CAACxB,SAAUwB,IAIlD,SAAUwD,EAAoClB,GAClD,GAAID,EAAYC,GAEd,OAAOA,EAGT,MAAMG,EAAQ,IAAIjC,EACZkC,EAAS,IAAI9F,EPUiB,EACpC0F,EACA/E,EACAkE,KAEA6B,OAAOG,eAAenB,EAAK/E,EAAM,CAC/BkE,QACAiC,cAAc,GAEN,EOjBVC,CAAuBrB,EAAKpG,EAAW,CAACwG,SAAQD,UAEhD,MAAMmB,EAAeN,OAAOC,OAAOjB,EAAK,CACtCuB,GAAE,IAAIlG,IACGyF,EAAgBQ,EAAcpB,EAAYC,EAAOC,EAAQ/E,IAGlEmG,QAAQnG,GACN,MAAMqC,EAAYwC,EAAYC,EAAOC,EAAQ/E,GAM7C,OALIP,MAAMC,QAAQ2C,GAChBA,EAAU1C,QAAQ4F,EAAsBU,IAExCV,EAAsBU,EAAtBV,CAAoClD,GAE/BoD,EAAgBQ,EAAc5D,EACtC,EAEDmD,IAAI3E,EAAyBC,GAC3B,MAAME,SAAsBH,EACtBuF,EACc,MAAlBtF,IACkB,WAAjBE,GAA8C,WAAjBA,GAChC8D,EAAMjF,OAAOgB,EAAUC,EAAgBsF,GACnC3G,MAAMC,QAAQmB,GAChBkE,EAAOlF,OAAOgB,EAASwF,QAAQpC,GAAqB,iBAAPA,KACpCrF,EAAYiC,IACrBkE,EAAOlF,OAAOgB,EAEjB,EAEDT,KAAKd,KAA8BU,GAC7BP,MAAMC,QAAQJ,GAChBA,EAAWK,SAASyF,IAClBN,EAAMnF,QAAQyF,GAAQvE,GAAaA,EAASN,MAAM6E,EAAOpF,KACzD+E,EAAOhF,OAAOqF,EAAOpF,EAAK,IR7EF,MQ+EjBV,IACTwF,EAAMnF,QAAQL,GAAauB,IACzBA,EAASN,MAAMjB,EAAYU,EAAK,IAElC+E,EAAOhF,OAAOT,EAAYU,GAE7B,EAEDD,OAAOpB,GACLoG,EAAOvF,IAAIb,EACZ,IAGH,OAAOsH,CACT,CCvFa,MAAAxH,EAA4B,MACvC,MAAM6H,EAAyB3B,GAC7BkB,EAAkBlB,GAgBpB,OAdA2B,EAAIC,OAASV,EAEbS,EAAIE,OAA4B7B,GAC9BkB,EAAkBF,OAAOc,OAAO9B,IAElC2B,EAAIG,OAAU9B,IACZ,MAAM+B,EAAYb,EAAkB,CAAA,GAEpC,OADAa,EAAUR,GTjBoB,ISiBGtI,EAASO,QAASwG,GAC5C+B,CAAS,EAGlBJ,EAAIK,GAAKjC,EACT4B,EAAI1I,SAAWA,EAER0I,CACR,EAnBwC,SAuB5BM,EACX1H,cACET,EAASU,KACV"}