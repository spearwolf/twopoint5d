---
import Layout from '~layouts/VanillaDemo.astro';
import {description, showSource, title} from './_quadtree-playground.json';
---

<Layout title={title} showSource={showSource}>
  <p slot="demo-description">{description}</p>

  <canvas id="twopoint5d" resize-to="window"></canvas>
</Layout>

<style>
  :global(.lil-gui) :global(option) {
    color: #555;
  }
</style>

<script>
  import {on} from '@spearwolf/eventize';
  import {
    ChunkQuadTreeNode,
    Display,
    OnDisplayRenderFrame,
    OnDisplayResize,
    type OnDisplayResizeProps,
  } from '@spearwolf/twopoint5d';
  import GUI from 'lil-gui';
  import {QuadTreeVisualization} from '~demos/quadtree-playground/QuadTreeVisualization';

  // -----------------------------

  const display = new Display(document.getElementById('twopoint5d')!);

  const visual = new QuadTreeVisualization(display.renderer, 1024, 1024);

  visual.makeRandomQuadTree();

  on(display, {
    [OnDisplayResize]: ({width, height}: OnDisplayResizeProps) => {
      visual.canvasStage.setContainerSize(width, height);
    },

    [OnDisplayRenderFrame]: () => {
      visual.canvasStage.render();
    },
  });

  display.start();

  // -----------------------------

  const gui = new GUI({title: 'quadtree playground'});

  const actions = {
    randomChunkCount: 100,
    sortedChunkCount: 100,
    maxChunkNodes: 10,
    intersectDistanceFactor: ChunkQuadTreeNode.IntersectDistanceFactor,
    beforeAfterDeltaFactor: ChunkQuadTreeNode.BeforeAfterDeltaFactor,

    makeRandomQuadTree: () => {
      ChunkQuadTreeNode.IntersectDistanceFactor = actions.intersectDistanceFactor;
      ChunkQuadTreeNode.BeforeAfterDeltaFactor = actions.beforeAfterDeltaFactor;

      visual.makeRandomQuadTree(actions.randomChunkCount, actions.sortedChunkCount, actions.maxChunkNodes);
    },
  };

  gui.add(actions, 'randomChunkCount', 0, 1000, 1).name('random placed chunks');
  gui.add(actions, 'sortedChunkCount', 0, 1000, 1).name('sorted grid chunks');
  gui.add(actions, 'maxChunkNodes', 2, 30, 1).name('max chunk nodes');
  gui.add(actions, 'intersectDistanceFactor', 0.1, 10).name('intersect distance factor');
  gui.add(actions, 'beforeAfterDeltaFactor', 0.1, 10).name('before after delta factor');
  gui.add(actions, 'makeRandomQuadTree').name('make random chunks');
</script>
