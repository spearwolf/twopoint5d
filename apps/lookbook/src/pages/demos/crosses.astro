---
import Layout from '~layouts/VanillaDemo.astro';
import {description, showSource, title} from './_crosses.json';
---

<Layout title={title} showSource={showSource}>
  <p slot="demo-description">{description}</p>
  <canvas id="canvas-container" resize-to="window"></canvas>
</Layout>

<style>
  body {
    height: 100vh;
    overflow-y: hidden;
  }
  body {
    background: radial-gradient(circle, rgb(182, 182, 182) 0%, rgb(51, 51, 51) 100%);
  }
</style>

<script>
  import {VertexObjectGeometry, VertexObjects} from '@spearwolf/twopoint5d';
  import {vec4} from 'three/tsl';
  import {DoubleSide, MeshBasicNodeMaterial} from 'three/webgpu';
  import {Cross, CrossDescriptor} from '~demos/crosses/Crosses';
  import {PerspectiveOrbitDemo} from '~demos/utils/PerspectiveOrbitDemo';

  const CAPACITY = 15;
  const SIZE = 15;
  const OFFSET = 1.2;

  const demo = new PerspectiveOrbitDemo(document.getElementById('canvas-container'));

  demo.onInit(() => {
    const geometry = new VertexObjectGeometry<Cross>(CrossDescriptor, CAPACITY);

    for (let i = 0; i < CAPACITY; i++) {
      const cross = geometry.pool.createVO();

      cross.make(SIZE, SIZE);
      cross.rotate(i * 45);
      cross.translate(i * SIZE * OFFSET - ((CAPACITY - 1) * SIZE * OFFSET) / 2, 0);
    }

    const material = new MeshBasicNodeMaterial({
      side: DoubleSide,
    });

    material.colorNode = vec4(0.9, 0, 0.3, 1);

    const mesh = new VertexObjects(geometry, material);
    mesh.name = 'CrossMesh';

    demo.scene.add(mesh);
  });

  demo.start();

  console.dir(demo);
</script>
